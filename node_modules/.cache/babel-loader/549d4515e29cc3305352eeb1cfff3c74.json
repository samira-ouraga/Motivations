{"ast":null,"code":"import _classCallCheck from\"/Users/samira/Desktop/Motivations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/samira/Desktop/Motivations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/samira/Desktop/Motivations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/samira/Desktop/Motivations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/samira/Desktop/Motivations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import'./Showquotes.css';var Showquotes=/*#__PURE__*/function(_React$Component){_inherits(Showquotes,_React$Component);var _super=_createSuper(Showquotes);function Showquotes(props){var _this;_classCallCheck(this,Showquotes);_this=_super.call(this,props);_this.displayQuotes=function(props){//go through props array\n//randomly pick one\nvar selectedQuote=_this.props.quotes[Math.floor(Math.random()*_this.props.quotes.length)];//display what is picked by saving it into a state\n_this.setState({text:selectedQuote.text,author:selectedQuote.author});};_this.displayQuotes=_this.displayQuotes.bind(_assertThisInitialized(_this));//this state will hold the result of randomly picking a quote\n_this.state={text:'',author:''};return _this;}//function to show what todo when button is clicked \n_createClass(Showquotes,[{key:\"render\",value:function render(){var _this$state=this.state,text=_this$state.text,author=_this$state.author;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Click button to see new  quotes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"quotes\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[text,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[author,\" \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"mybutton\",onClick:this.displayQuotes,children:\" New quote\"})]})]});}}]);return Showquotes;}(React.Component);export default Showquotes;","map":{"version":3,"sources":["/Users/samira/Desktop/Motivations/src/components/quotes/Showquotes.js"],"names":["React","Showquotes","props","displayQuotes","selectedQuote","quotes","Math","floor","random","length","setState","text","author","bind","state","Component"],"mappings":"g1BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,kBAAP,C,GAEMC,CAAAA,U,oHACJ,oBAAYC,KAAZ,CAAmB,4CACjB,uBAAMA,KAAN,EADiB,MAWnBC,aAXmB,CAWJ,SAACD,KAAD,CAAU,CACvB;AACA;AACA,GAAME,CAAAA,aAAa,CAAG,MAAKF,KAAL,CAAWG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,MAAKN,KAAL,CAAWG,MAAX,CAAkBI,MAA7C,CAAlB,CAAtB,CAEA;AACA,MAAKC,QAAL,CAAc,CACZC,IAAI,CAAEP,aAAa,CAACO,IADR,CAEZC,MAAM,CAACR,aAAa,CAACQ,MAFT,CAAd,EAID,CArBkB,CAEjB,MAAKT,aAAL,CAAqB,MAAKA,aAAL,CAAmBU,IAAnB,+BAArB,CAEA;AACA,MAAKC,KAAL,CAAY,CACVH,IAAI,CAAC,EADK,CAEVC,MAAM,CAAC,EAFG,CAAZ,CALiB,aASlB,CACD;8DAcS,iBACe,KAAKE,KADpB,CACAH,IADA,aACAA,IADA,CACKC,MADL,aACKA,MADL,CAEP,mBACA,aAAK,SAAS,CAAC,WAAf,wBACE,wDADF,cAEE,aAAK,SAAS,CAAC,QAAf,wBACE,sBAAKD,IAAL,OADF,cAEE,qBAAIC,MAAJ,OAFF,cAGE,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAE,KAAKT,aAA3C,wBAHF,GAFF,GADA,CAUD,C,wBArCsBH,KAAK,CAACe,S,EAwC/B,cAAed,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport './Showquotes.css';\n\nclass Showquotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.displayQuotes = this.displayQuotes.bind(this);\n\n    //this state will hold the result of randomly picking a quote\n    this.state ={\n      text:'',\n      author:''\n    }\n  }\n  //function to show what todo when button is clicked \n  displayQuotes= (props) =>{\n    //go through props array\n    //randomly pick one\n    const selectedQuote = this.props.quotes[Math.floor(Math.random() * this.props.quotes.length)]\n\n    //display what is picked by saving it into a state\n    this.setState({\n      text: selectedQuote.text, \n      author:selectedQuote.author\n    })\n  }\n\n\n  render() {\n    const {text,author} = this.state\n    return (\n    <div className='container'>\n      <h1> Click button to see new  quotes</h1>\n      <div className='quotes'>\n        <h3>{text} </h3>\n        <p>{author} </p>\n        <button className='mybutton' onClick={this.displayQuotes}> New quote</button>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Showquotes;"]},"metadata":{},"sourceType":"module"}